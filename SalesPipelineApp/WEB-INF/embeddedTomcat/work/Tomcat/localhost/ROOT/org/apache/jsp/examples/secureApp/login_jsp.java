/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.42
 * Generated at: 2025-06-18 22:00:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.examples.secureApp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/isomorphic_core_rpc.jar", Long.valueOf(1750169604742L));
    _jspx_dependants.put("jar:file:/C:/Users/User/Downloads/SmartClient_v141p_2025-06-14_Evaluation/SmartClient_v141p_2025-06-14_Evaluation/smartclientSDK/WEB-INF/lib/isomorphic_core_rpc.jar!/META-INF/isc.tld", Long.valueOf(1749892736000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fisomorphic_005floadISC_0026_005fskin_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fisomorphic_005floadDS_0026_005fID_005fnobody;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fisomorphic_005floadISC_0026_005fskin_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fisomorphic_005floadDS_0026_005fID_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fisomorphic_005floadISC_0026_005fskin_005fnobody.release();
    _005fjspx_005ftagPool_005fisomorphic_005floadDS_0026_005fID_005fnobody.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<HTML><HEAD><TITLE>SmartClient Secure Login Example</TITLE>\r\n");
      if (_jspx_meth_isomorphic_005floadISC_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</HEAD><BODY>\r\n");
      out.write("<!--<a href=\"register.jsp\">Register</a><br />\r\n");
      out.write("<a href=\"lostpassword.jsp\">Lost Password?<br />-->\r\n");
      out.write("\r\n");
      out.write("The following test account may be used:\r\n");
      out.write("<p>\r\n");
      out.write("Username: john.smith@isomorphic.com<br>\r\n");
      out.write("password: smith<br>\r\n");
      out.write("<p>\r\n");
      out.write("For the password reset button to successfully send the email containing the new password,\r\n");
      out.write("a SMTP server (defaulting to localhost) must be configured. Ensure that an SMTP server\r\n");
      out.write("is configured in the server.properties file. Please see the SmartClient Server documentation\r\n");
      out.write("on the MailMessage class for additional information.\r\n");
      out.write("\r\n");
      out.write("<!-- Ensure that the following line appears verbatim in the login page downloaded by the\r\n");
      out.write("     browser. As requests for authenticated content are redirected to this page if the\r\n");
      out.write("     authentication has expired, SmartClient watches for this line to detect if\r\n");
      out.write("     a relogin is necessary. -->\r\n");
      out.write("<SCRIPT>//'\"]]>>isc_loginRequired\r\n");
      if (_jspx_meth_isomorphic_005floadDS_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "loginDialog.js", out, true);
      out.write("\r\n");
      out.write("\r\n");
      out.write("isc.RPCManager.createLoginDialog();\r\n");
      out.write("\r\n");
      out.write("</SCRIPT>\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_isomorphic_005floadISC_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  isomorphic:loadISC
    com.isomorphic.taglib.LoadISCTag _jspx_th_isomorphic_005floadISC_005f0 = (com.isomorphic.taglib.LoadISCTag) _005fjspx_005ftagPool_005fisomorphic_005floadISC_0026_005fskin_005fnobody.get(com.isomorphic.taglib.LoadISCTag.class);
    _jspx_th_isomorphic_005floadISC_005f0.setPageContext(_jspx_page_context);
    _jspx_th_isomorphic_005floadISC_005f0.setParent(null);
    // /examples/secureApp/login.jsp(3,0) name = skin type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_isomorphic_005floadISC_005f0.setSkin("Enterprise");
    int _jspx_eval_isomorphic_005floadISC_005f0 = _jspx_th_isomorphic_005floadISC_005f0.doStartTag();
    if (_jspx_th_isomorphic_005floadISC_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fisomorphic_005floadISC_0026_005fskin_005fnobody.reuse(_jspx_th_isomorphic_005floadISC_005f0);
    return false;
  }

  private boolean _jspx_meth_isomorphic_005floadDS_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  isomorphic:loadDS
    com.isomorphic.taglib.LoadDSTag _jspx_th_isomorphic_005floadDS_005f0 = (com.isomorphic.taglib.LoadDSTag) _005fjspx_005ftagPool_005fisomorphic_005floadDS_0026_005fID_005fnobody.get(com.isomorphic.taglib.LoadDSTag.class);
    _jspx_th_isomorphic_005floadDS_005f0.setPageContext(_jspx_page_context);
    _jspx_th_isomorphic_005floadDS_005f0.setParent(null);
    // /examples/secureApp/login.jsp(23,0) name = ID type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_isomorphic_005floadDS_005f0.setID("user");
    int _jspx_eval_isomorphic_005floadDS_005f0 = _jspx_th_isomorphic_005floadDS_005f0.doStartTag();
    if (_jspx_th_isomorphic_005floadDS_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fisomorphic_005floadDS_0026_005fID_005fnobody.reuse(_jspx_th_isomorphic_005floadDS_005f0);
    return false;
  }
}
